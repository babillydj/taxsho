openapi: "3.0.0"
info:
  version: 1.0.0
  title: Tax Calculator
  description: API Documentation
  contact:
    name: Billboo
    email: babillydj@gmail.com
servers:
  - url: http://localhost:8000/product/api
paths:
  /bill:
    get:
      description: |
        Returns all products with bill detail.
      operationId: product_list
      responses:
        '200':
          description: bill response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /:
    get:
      description: |
        Returns all products.
      operationId: ProductList
      responses:
        '200':
          description: product response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: ProductList
      requestBody:
        description: Product to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
      responses:
        '200':
          description: product response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{id}:
    get:
      description: Returns a product based on a single ID
      operationId: ProductDetail
      parameters:
        - name: id
          in: path
          description: ID of product to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: product response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single product based on the ID supplied
      operationId: ProductDetail
      parameters:
        - name: id
          in: path
          description: ID of product to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: product deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Bill:
      properties:
        list:
          type: array
          items:
            type: object
            allOf:
            - $ref: '#/components/schemas/NewProduct'
            properties:
              type:
                type: string
                enum:
                  - Food & Beverages
                  - Tobacco
                  - Entertainment
              refundable:
                type: string
                enum:
                  - Yes
                  - No
              tax:
                type: integer
                format: int64
              amount:
                type: integer
                format: int64
        price_subtotal:
          type: integer
          format: int64
        tax_subtotal:
          type: integer
          format: int64
        grand_subtotal:
          type: integer
          format: int64
    Product:
      allOf:
        - $ref: '#/components/schemas/NewProduct'
        - required:
          - id
          properties:
            id:
              type: integer
              format: int64

    NewProduct:
      required:
        - name
        - tax_code
        - price
      properties:
        name:
          type: string
        tax_code:
          type: string
          enum:
            - 1
            - 2
            - 3
        price:
          type: integer
          format: int64  

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string